import React, { FC } from "react";
import "@/styles/globals.css";

export const text1 = (id: string): React.ReactElement => {
    return (
        <div>
            <p>
                初めてのサイト制作として、ポートフォリオサイトを制作してみました。
                <br />
                プログラミングは覚えることがたくさんあって大変ですが、日々楽しみながら勉強しています。
            </p>
        </div>
    );
}

export const text2 = (id: string): React.ReactElement => {
    return (
        <div>
            <p>
                近況やプログラミングを学んでいく上で印象に残ったことを紹介する
                <br />
                「My News」をこのサイトに実装しました。
                <br />
                これから定期的に投稿していこうと思います。
            </p>
        </div>
    );
}

export const text3 = (id: string): React.ReactElement => {
    return (
        <div>
            <p className="text-justify">
                プログラミングの学習を始めて、約３ヶ月が過ぎました。
                <br />
                ここで少し、私のプログラミングの勉強法についてお話ししようと思います。
                <br />
                メインページの About でも書いている通り、
                <br />
                プログラミング学習のスタートは Youtube での動画視聴から始まりました。
                <br /> 
                初心者でもとっつきやすいような動画が思っていたより多く、動画視聴だけで、
                <br />
                基礎的なコードの記法や用語など、
                <br />
                プログラミングの表面的な部分の知識については抑えれたかなと思います。
                <br />
                ただ、表面的な部分からより詳しく解説しているような動画を調べようとすると、
                <br />
                自分の調べ方が悪いのか、詳しすぎる、
                <br />
                プログラミング玄人向けの動画ばかりがヒットするようになって、
                <br />
                自分の実力に合った情報が少ないと思うようになりました。
                <br />
                そこで、次は参考書に手を出し始めました。ネットで買ったり、実際に書店に行ったりして、
                <br />
                今の自分に必要な知識が載っている本を数冊購入して、勉強しました。
                <br />
                参考書での勉強は、動画視聴では得られなかったような基礎的な知識の補足や、
                <br />
                「これが知りたかった！」というようなより詳細な情報を多く吸収することができた反面、
                <br />
                その参考書の出版された年が古いものだと、
                <br />
                記載されている情報が現在の状況とまったく異なることがあり、
                <br />
                混乱することもありました。
                <br />
                ２～３年古くても大丈夫だろうと思って購入していましたが、
                <br />
                プログラミング技術の進歩は凄まじいもので、この経験を通して、
                <br />
                プログラミングの勉強というのは一度やれば完璧にマスターできるわけではなく、
                <br />
                常に勉強をし続けないといけない分野なんだなと改めて感じました。
                <br />
                進歩といえば、私がこれまでのプログラミング学習を通して、
                <br />
                常にお世話になってきた存在がいます。
                <br />
                それが、AI です。
                <br />
                私は VSC <small>(Visual Studio Code)</small>にも導入されている、Copilot をよく利用しているのですが、
                <br />
                具体性に欠けたような大雑把な質問を投げかけても、望んでいた回答がきちんと返ってきたり、
                <br />
                「こういう処理をしてこういう動作をする部品を作りたい！」と詳細に指令を出せば、
                <br />
                ある程度望んだものに近しいものを自動で作成してくれるので、
                <br />
                この アシスタントAI といわれるものを利用し始めて、勉強の効率がグッと上がりました。
                <br />
                ほんの数年前でも、プログラミングの勉強を早く始めていたら、
                <br />
                途中で挫折していたかもしれません。それほどまでに、ITやAI の技術進歩は
                <br />
                驚異的なスピードで進んでいるんだと身をもって感じました。
                <br />
                ただ、この機能を使い続けて頼りきりになるのではなく、きちんと自分の知識となるように、
                <br />
                自動で作成された部品も、どういう記法で、どういう処理を行っているのか調べて、
                <br />
                吸収することが大事だと思いました。
                <br />
                今は学習の補助輪として利用しつつ、
                <br />
                これからも AI と共にプログラミングを楽しく学んでいこうと思います。</p>
        </div>
    )
}